{"id":"Uult","dependencies":[{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/package.json","includedInParent":true,"mtime":1690560976263},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/.babelrc","includedInParent":true,"mtime":1688842366056},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/package.json","includedInParent":true,"mtime":1688674501839},{"name":"../internals/function-call","loc":{"line":1,"column":19,"index":19},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/function-call.js"},{"name":"../internals/a-callable","loc":{"line":2,"column":24,"index":74},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/a-callable.js"},{"name":"../internals/an-object","loc":{"line":3,"column":23,"index":125},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/an-object.js"},{"name":"../internals/try-to-string","loc":{"line":4,"column":26,"index":178},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/try-to-string.js"},{"name":"../internals/get-iterator-method","loc":{"line":5,"column":32,"index":241},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/get-iterator-method.js"}],"generated":{"js":"var call = require('../internals/function-call');\nvar aCallable = require('../internals/a-callable');\nvar anObject = require('../internals/an-object');\nvar tryToString = require('../internals/try-to-string');\nvar getIteratorMethod = require('../internals/get-iterator-method');\n\nvar $TypeError = TypeError;\n\nmodule.exports = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod(argument) : usingIterator;\n  if (aCallable(iteratorMethod)) return anObject(call(iteratorMethod, argument));\n  throw $TypeError(tryToString(argument) + ' is not iterable');\n};\n"},"sourceMaps":null,"error":null,"hash":"e08d0c535487f14c4f9aa208d465b9d4","cacheData":{"env":{}}}