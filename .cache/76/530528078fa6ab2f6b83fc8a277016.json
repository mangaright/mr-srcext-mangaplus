{"id":"eD1s","dependencies":[{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/package.json","includedInParent":true,"mtime":1690560976263},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/.babelrc","includedInParent":true,"mtime":1688842366056},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/package.json","includedInParent":true,"mtime":1688674501839},{"name":"../internals/is-callable","loc":{"line":1,"column":25,"index":25},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/a-callable.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/is-callable.js"},{"name":"../internals/try-to-string","loc":{"line":2,"column":26,"index":80},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/a-callable.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/try-to-string.js"}],"generated":{"js":"var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n"},"sourceMaps":null,"error":null,"hash":"b4ed317e427f2d9b2da0c8a0c2dee958","cacheData":{"env":{}}}