{"id":"Focm","dependencies":[{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/.babelrc","includedInParent":true,"mtime":1688842366056},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/package.json","includedInParent":true,"mtime":1690560976263},{"name":"core-js/features/url","loc":{"line":3,"column":7,"index":20},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/src/index.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/features/url/index.js"},{"name":"fastest-levenshtein","loc":{"line":5,"column":29,"index":74},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/src/index.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/fastest-levenshtein/esm/mod.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.getChapter = getChapter;\nexports.listChapters = listChapters;\nexports.searchManga = searchManga;\nrequire(\"core-js/features/url\");\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == _typeof(value) && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } } // \nvar _require = require('fastest-levenshtein'),\n  distance = _require.distance;\nvar ChapterListItem = /*#__PURE__*/_createClass(\n// Number is the chapter number. Could be an actual number like \"1\" or could\n// be a special chapter like \"EX\" or \"Omake\".\n//\n\n// Name is the short title of the chapter.\n// \n\n// Description is the longer description of the chapter. May be blank\n// depending on the way the website handles information about chapters.\n// \n\n// Identifier is a source-specific identifier. Could be an id like \"1234\" or\n// anything that makes sense for this source. This identifier will be\n// provided in getChapter call as chapterIdentifier to retrieve the chapter\n// pages.\n// \n\n// Optional: Scanalation group if one exists.\n// \n\n// Optional: Set variant if there are multiple versions of the same chapter\n//           and group is not present or not enough to differintiate.\n//\n\n// Optional: Date created as a string if it exists.\n\n// Optional: Date updated as a string if it exists.\n\n// Optional: Date of original chapter's publication as a string if it exists.\n\nfunction ChapterListItem(_ref) {\n  var number = _ref.number,\n    identifier = _ref.identifier,\n    title = _ref.title,\n    _ref$description = _ref.description,\n    description = _ref$description === void 0 ? \"\" : _ref$description,\n    _ref$group = _ref.group,\n    group = _ref$group === void 0 ? null : _ref$group,\n    _ref$variant = _ref.variant,\n    variant = _ref$variant === void 0 ? null : _ref$variant,\n    _ref$created = _ref.created,\n    created = _ref$created === void 0 ? null : _ref$created,\n    _ref$updated = _ref.updated,\n    updated = _ref$updated === void 0 ? null : _ref$updated,\n    _ref$published = _ref.published,\n    published = _ref$published === void 0 ? null : _ref$published;\n  _classCallCheck(this, ChapterListItem);\n  this.number = number;\n  this.identifier = identifier;\n  this.title = title;\n  this.description = description;\n  this.group = group;\n  this.variant = variant;\n  this.created = created;\n  this.updated = updated;\n  this.published = published;\n});\nvar ChapterList = /*#__PURE__*/_createClass(\n// Chapters contains all the chapters for a given manga series.\n//\n\nfunction ChapterList(_ref2) {\n  var chapters = _ref2.chapters;\n  _classCallCheck(this, ChapterList);\n  this.chapters = chapters;\n});\nvar PageData = /*#__PURE__*/_createClass(function PageData(_ref3) {\n  var highUrl = _ref3.highUrl,\n    _ref3$lowUrl = _ref3.lowUrl,\n    lowUrl = _ref3$lowUrl === void 0 ? null : _ref3$lowUrl,\n    _ref3$highHandler = _ref3.highHandler,\n    highHandler = _ref3$highHandler === void 0 ? null : _ref3$highHandler,\n    _ref3$lowHandler = _ref3.lowHandler,\n    lowHandler = _ref3$lowHandler === void 0 ? null : _ref3$lowHandler;\n  _classCallCheck(this, PageData);\n  _defineProperty(this, \"version\", \"1.0.0\");\n  this.highUrl = highUrl;\n  this.lowUrl = lowUrl;\n  this.highHandler = highHandler;\n  this.lowHandler = lowHandler;\n});\nvar ChapterData = /*#__PURE__*/_createClass(function ChapterData(_ref4) {\n  var pages = _ref4.pages;\n  _classCallCheck(this, ChapterData);\n  _defineProperty(this, \"version\", \"2.0.0\");\n  this.pages = pages;\n});\nvar MangaSeries = /*#__PURE__*/_createClass(\n// Name is the name of the manga series.\n// \n\n// Identifier is the id or unique identifier for this manga series on this\n// source.\n// \n\n// NOTE: Optional\n// The coverUrl if one exists. Used to help users identify best matches.\n\n// NOTE: Optional\n// Ranking is the a representation of the likelyhood of this result being\n// the correct match. 0 being the best match and Number.MAX_SAFE_INTEGER\n// being the worst match. All negative numbers will be treated as equal.\n// \n\nfunction MangaSeries(_ref5) {\n  var name = _ref5.name,\n    identifier = _ref5.identifier,\n    _ref5$coverUrl = _ref5.coverUrl,\n    coverUrl = _ref5$coverUrl === void 0 ? null : _ref5$coverUrl,\n    _ref5$ranking = _ref5.ranking,\n    ranking = _ref5$ranking === void 0 ? -1 : _ref5$ranking;\n  _classCallCheck(this, MangaSeries);\n  this.name = name;\n  this.identifier = identifier;\n  this.coverUrl = coverUrl;\n  this.ranking = ranking;\n});\nvar MangaSeriesList = /*#__PURE__*/_createClass(\n// Results is the list of all MangaSeries objects which match this query in\n// a searchManga call.\n\nfunction MangaSeriesList(_ref6) {\n  var _ref6$results = _ref6.results,\n    results = _ref6$results === void 0 ? [] : _ref6$results;\n  _classCallCheck(this, MangaSeriesList);\n  _defineProperty(this, \"results\", []);\n  this.results = results;\n});\nvar baseUrl = \"https://jumpg-webapi.tokyo-cdn.com/api\";\nfunction filterManga(query, mangaList) {\n  var distances = mangaList.map(function (x) {\n    return [distance(query, x.name), x];\n  });\n  var top3 = distances.sort(function (x, y) {\n    return x[0] - y[0];\n  }).slice(0, 3);\n  return top3.map(function (x, i) {\n    var item = x[1];\n    item.ranking = i;\n    return item;\n  });\n}\nfunction searchManga(_x) {\n  return _searchManga.apply(this, arguments);\n}\nfunction _searchManga() {\n  _searchManga = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(seriesName) {\n    var finalUrl, searchParams, response, json, formatted, filtered;\n    return _regeneratorRuntime().wrap(function _callee$(_context) {\n      while (1) switch (_context.prev = _context.next) {\n        case 0:\n          finalUrl = new URL(\"\".concat(baseUrl, \"/title_list/allV2\"));\n          searchParams = new URLSearchParams({\n            format: \"json\"\n          });\n          finalUrl.search = searchParams.toString();\n          _context.next = 5;\n          return fetch(finalUrl);\n        case 5:\n          response = _context.sent;\n          _context.next = 8;\n          return response.json();\n        case 8:\n          json = _context.sent;\n          formatted = json.success.allTitlesViewV2.AllTitlesGroup.map(function (data) {\n            // NOTE: No language is english for MangaPlus\n            // \n            var engTitle = data.titles.find(function (title) {\n              return !title.language;\n            });\n            if (!engTitle) {\n              return null;\n            }\n            var newSeries = new MangaSeries({\n              identifier: engTitle.titleId,\n              name: data.theTitle,\n              coverUrl: engTitle.portraitImageUrl\n            });\n            return newSeries;\n          }).filter(function (x) {\n            return x;\n          });\n          filtered = filterManga(seriesName, formatted);\n          return _context.abrupt(\"return\", new MangaSeriesList({\n            results: filtered\n          }));\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }, _callee);\n  }));\n  return _searchManga.apply(this, arguments);\n}\nfunction listChapters(_x2) {\n  return _listChapters.apply(this, arguments);\n}\nfunction _listChapters() {\n  _listChapters = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(seriesIdentifier) {\n    var finalUrl, searchParams, response, json, chapGroups, allChaps, formatted, chapList;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          finalUrl = new URL(\"\".concat(baseUrl, \"/title_detailV2\"));\n          searchParams = new URLSearchParams({\n            format: \"json\",\n            title_id: seriesIdentifier\n          });\n          finalUrl.search = searchParams.toString();\n          _context2.next = 5;\n          return fetch(finalUrl);\n        case 5:\n          response = _context2.sent;\n          _context2.next = 8;\n          return response.json();\n        case 8:\n          json = _context2.sent;\n          chapGroups = json.success.titleDetailView.chapterListGroup;\n          allChaps = chapGroups.flatMap(function (item) {\n            var availChaps = [];\n            if (item.firstChapterList) {\n              availChaps = availChaps.concat(item.firstChapterList);\n            }\n            if (item.midChapterList) {\n              availChaps = availChaps.concat(item.midChapterList);\n            }\n            if (item.lastChapterList) {\n              availChaps = availChaps.concat(item.lastChapterList);\n            }\n            return availChaps;\n          });\n          formatted = allChaps.map(function (data) {\n            var number = data.name.replace(\"#\", \"\");\n            var startDate = new Date(data.startTimeStamp * 1000);\n            return new ChapterListItem({\n              identifier: data.chapterId,\n              title: data.subTitle,\n              number: number,\n              created: startDate,\n              updated: startDate,\n              published: startDate\n            });\n          });\n          chapList = new ChapterList({\n            chapters: formatted\n          });\n          return _context2.abrupt(\"return\", chapList);\n        case 14:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _listChapters.apply(this, arguments);\n}\nfunction xorDecrypt(key, data) {\n  var length = key.length;\n  var decrypted = [];\n  for (var i = 0; i < data.length; i++) {\n    var c = data.charCodeAt(i);\n    var ec = key.charCodeAt(i % length);\n    decrypted.push(String.fromCharCode(c ^ ec));\n  }\n  return decrypted.join(\"\");\n}\nfunction getChapter(_x3) {\n  return _getChapter.apply(this, arguments);\n}\nfunction _getChapter() {\n  _getChapter = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee3(chapterIdentifier) {\n    var finalUrl, searchParams, response, json, highPages, allPages, pageDatas, chapterData;\n    return _regeneratorRuntime().wrap(function _callee3$(_context3) {\n      while (1) switch (_context3.prev = _context3.next) {\n        case 0:\n          finalUrl = new URL(\"\".concat(baseUrl, \"/manga_viewer\"));\n          searchParams = new URLSearchParams({\n            format: \"json\",\n            split: \"yes\",\n            chapter_id: chapterIdentifier,\n            img_quality: \"high\"\n          });\n          finalUrl.search = searchParams.toString();\n          _context3.next = 5;\n          return fetch(finalUrl);\n        case 5:\n          response = _context3.sent;\n          _context3.next = 8;\n          return response.json();\n        case 8:\n          json = _context3.sent;\n          highPages = json.success.mangaViewer.pages;\n          searchParams = new URLSearchParams({\n            format: \"json\",\n            split: \"yes\",\n            chapter_id: chapterIdentifier,\n            img_quality: \"low\"\n          });\n          finalUrl.search = searchParams.toString();\n          _context3.next = 14;\n          return fetch(finalUrl);\n        case 14:\n          response = _context3.sent;\n          _context3.next = 17;\n          return response.json();\n        case 17:\n          json = _context3.sent;\n          allPages = highPages.map(function (page, i) {\n            return {\n              high: page,\n              low: json.success.mangaViewer.pages[i]\n            };\n          });\n          pageDatas = allPages.map(function (pages) {\n            var low = pages.low,\n              high = pages.high;\n            var highUrl = high.mangaPage.imageUrl;\n            var lowUrl = low.mangaPage.imageUrl;\n            var highHandler = function highHandler(pageData) {\n              return xorDecrypt(high.mangaPage.encryptionKey, pagedata);\n            };\n            var lowHandler = function lowHandler(pageData) {\n              return xorDecrypt(low.mangaPage.encryptionKey, pagedata);\n            };\n            return new PageData({\n              highUrl: highUrl,\n              lowUrl: lowUrl,\n              highHandler: highHandler,\n              lowHandler: lowHandler\n            });\n          }); // const highData = allPages.reduce((accum, nextPage) => {\n          //     const page = nextPage.mangaPage;\n          //     if (!page) {\n          //         return accum;\n          //     }\n          //     const encryptionKey = page.encryptionKey;\n          //     return accum.concat([[\n          //         page.imageUrl,\n          //         (pageData: string) => xorDecrypt(encryptionKey, pageData)\n          //     ]]);\n          // }, []);\n          // const pages = highData.map(pageData => (\n          //     new PageData({ highUrl: pageData[0], highHandler: pageData[1] })\n          // ));\n          chapterData = new ChapterData({\n            pages: pageDatas\n          });\n          return _context3.abrupt(\"return\", chapterData);\n        case 22:\n        case \"end\":\n          return _context3.stop();\n      }\n    }, _callee3);\n  }));\n  return _getChapter.apply(this, arguments);\n}"},"sourceMaps":null,"error":null,"hash":"95fb6995c11cddf4152a32f9fa4bf009","cacheData":{"env":{}}}