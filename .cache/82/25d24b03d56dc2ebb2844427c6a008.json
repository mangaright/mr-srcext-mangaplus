{"id":"iEET","dependencies":[{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/package.json","includedInParent":true,"mtime":1690560976263},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/.babelrc","includedInParent":true,"mtime":1688842366056},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/package.json","includedInParent":true,"mtime":1688674501839},{"name":"../internals/define-built-in","loc":{"line":2,"column":28,"index":42},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/modules/web.url-search-params.delete.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/define-built-in.js"},{"name":"../internals/function-uncurry-this","loc":{"line":3,"column":26,"index":101},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/modules/web.url-search-params.delete.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/function-uncurry-this.js"},{"name":"../internals/to-string","loc":{"line":4,"column":23,"index":163},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/modules/web.url-search-params.delete.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/to-string.js"},{"name":"../internals/validate-arguments-length","loc":{"line":5,"column":38,"index":228},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/modules/web.url-search-params.delete.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/validate-arguments-length.js"}],"generated":{"js":"'use strict';\nvar defineBuiltIn = require('../internals/define-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar toString = require('../internals/to-string');\nvar validateArgumentsLength = require('../internals/validate-arguments-length');\n\nvar $URLSearchParams = URLSearchParams;\nvar URLSearchParamsPrototype = $URLSearchParams.prototype;\nvar append = uncurryThis(URLSearchParamsPrototype.append);\nvar $delete = uncurryThis(URLSearchParamsPrototype['delete']);\nvar forEach = uncurryThis(URLSearchParamsPrototype.forEach);\nvar push = uncurryThis([].push);\nvar params = new $URLSearchParams('a=1&a=2');\n\nparams['delete']('a', 1);\n\nif (params + '' !== 'a=2') {\n  defineBuiltIn(URLSearchParamsPrototype, 'delete', function (name /* , value */) {\n    var length = arguments.length;\n    var $value = length < 2 ? undefined : arguments[1];\n    if (length && $value === undefined) return $delete(this, name);\n    var entries = [];\n    forEach(this, function (v, k) { // also validates `this`\n      push(entries, { key: k, value: v });\n    });\n    validateArgumentsLength(length, 1);\n    var key = toString(name);\n    var value = toString($value);\n    var index = 0;\n    var dindex = 0;\n    var found = false;\n    var entriesLength = entries.length;\n    var entry;\n    while (index < entriesLength) {\n      entry = entries[index++];\n      if (found || entry.key === key) {\n        found = true;\n        $delete(this, entry.key);\n      } else dindex++;\n    }\n    while (dindex < entriesLength) {\n      entry = entries[dindex++];\n      if (!(entry.key === key && entry.value === value)) append(this, entry.key, entry.value);\n    }\n  }, { enumerable: true, unsafe: true });\n}\n"},"sourceMaps":null,"error":null,"hash":"3d3696fa0254938da3da92aabd42aa80","cacheData":{"env":{}}}