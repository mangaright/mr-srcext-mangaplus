{"id":"b2MC","dependencies":[{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/package.json","includedInParent":true,"mtime":1690560976263},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/.babelrc","includedInParent":true,"mtime":1688842366056},{"name":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/package.json","includedInParent":true,"mtime":1688674501839},{"name":"../internals/to-indexed-object","loc":{"line":1,"column":30,"index":30},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/array-includes.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/to-indexed-object.js"},{"name":"../internals/to-absolute-index","loc":{"line":2,"column":30,"index":95},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/array-includes.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/to-absolute-index.js"},{"name":"../internals/length-of-array-like","loc":{"line":3,"column":32,"index":162},"parent":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/array-includes.js","resolved":"/Users/rohancribbs/Code/js/mm-src-mangaplus/node_modules/core-js/internals/length-of-array-like.js"}],"generated":{"js":"var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n"},"sourceMaps":null,"error":null,"hash":"11ca3937b1af3f27056f953bb0a3a954","cacheData":{"env":{}}}